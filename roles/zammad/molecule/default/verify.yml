---
- name: Verify
  hosts: localhost
  connection: local
  gather_facts: true

  tasks:
    - name: "Pause for job to complete."
      ansible.builtin.pause:
        seconds: 5

    - name: "Get 'zammad' namespace info."
      kubernetes.core.k8s_info:
        kind: Namespace
        name: "zammad"
      register: zammad_namespace

    - name: Assert that 'zammad' namespace is active
      ansible.builtin.assert:
        that: zammad_namespace['resources'][0]['status']['phase'] == "Active"

    - name: "Get 'nginx' deployment info."
      kubernetes.core.k8s_info:
        kind: "Deployment"
        name: "zammad-nginx"
        namespace: "zammad"
      register: nginx_deployment

    - name: "Assert that 'nginx' is deployed"
      ansible.builtin.assert:
        that: nginx_deployment['resources'][0]['status']['availableReplicas'] == 1

    - name: "Get 'memcached' deployment info."
      kubernetes.core.k8s_info:
        kind: "Deployment"
        name: "zammad-memcached"
        namespace: "zammad"
      register: memcached_deployment

    - name: "Assert that 'memcached' is deployed"
      ansible.builtin.assert:
        that: memcached_deployment['resources'][0]['status']['availableReplicas'] == 1

    - name: "Get 'railsserver' deployment info."
      kubernetes.core.k8s_info:
        kind: "Deployment"
        name: "zammad-railsserver"
        namespace: "zammad"
      register: railsserver_deployment

    - name: "Assert that 'railsserver' is deployed"
      ansible.builtin.assert:
        that: railsserver_deployment['resources'][0]['status']['availableReplicas'] == 1

    - name: "Get 'scheduler' deployment info."
      kubernetes.core.k8s_info:
        kind: "Deployment"
        name: "zammad-scheduler"
        namespace: "zammad"
      register: scheduler_deployment

    - name: "Assert that 'scheduler' is deployed"
      ansible.builtin.assert:
        that: scheduler_deployment['resources'][0]['status']['availableReplicas'] == 1

    - name: "Get 'websocket' deployment info."
      kubernetes.core.k8s_info:
        kind: "Deployment"
        name: "zammad-websocket"
        namespace: "zammad"
      register: websocket_deployment

    - name: "Assert that 'websocket' is deployed"
      ansible.builtin.assert:
        that: websocket_deployment['resources'][0]['status']['availableReplicas'] == 1

    - name: "Get 'elasticsearch' statefull set info."
      kubernetes.core.k8s_info:
        kind: "StatefulSet"
        name: "zammad-elasticsearch-master"
        namespace: "zammad"
      register: elasticsearch_statefullset

    - name: "Assert that 'elasticsearch' is deployed"
      ansible.builtin.assert:
        that: elasticsearch_statefullset['resources'][0]['status']['availableReplicas'] == 1

    - name: "Get 'postgresql' statefull set info."
      kubernetes.core.k8s_info:
        kind: "StatefulSet"
        name: "zammad-postgresql"
        namespace: "zammad"
      register: postgresql_statefullset

    - name: "Assert that 'postgresql' is deployed"
      ansible.builtin.assert:
        that: postgresql_statefullset['resources'][0]['status']['availableReplicas'] == 1

    - name: "Get 'redis' statefull set info."
      kubernetes.core.k8s_info:
        kind: "StatefulSet"
        name: "zammad-redis-master"
        namespace: "zammad"
      register: redis_statefullset

    - name: "Assert that 'redis' is deployed"
      ansible.builtin.assert:
        that: redis_statefullset['resources'][0]['status']['availableReplicas'] == 1
